/* Global: Mixins
========================================================================== */

@function str-replace($string, $search, $replace: '') {
  $index: str-index(#{$string}, #{$search});

  @if $index {
    @return str-slice(#{$string}, 1, $index - 1) + $replace + str-replace(str-slice(#{$string}, $index + str-length(#{$search})), #{$search}, #{$replace});
  }

  @return #{$string};
}

@function url-encode($string) {
  $map: (
          "%": "%25",
          "<": "%3C",
          ">": "%3E",
          " ": "%20",
          "!": "%21",
          "*": "%2A",
          "'": "%27",
          '"': "%22",
          "(": "%28",
          ")": "%29",
          ";": "%3B",
          ":": "%3A",
          "@": "%40",
          "&": "%26",
          "=": "%3D",
          "+": "%2B",
          "$": "%24",
          ",": "%2C",
          "/": "%2F",
          "?": "%3F",
          "#": "%23",
          "[": "%5B",
          "]": "%5D"
  );
  $new: $string;
  @each $search, $replace in $map {
    $new: str-replace($new, $search, $replace);
  }
  @return $new;
}

@mixin icon-replace-fill($src, $fill-default, $fill-new) {
  $encode-fill-default: unquote("#{url-encode($fill-default)}");
  $encode-fill-new: unquote("#{url-encode($fill-new)}");
  $replace-src: str-replace($src, $encode-fill-default, $encode-fill-new);
  background-image: $replace-src;
}

@function image-url($image, $path: $image-path) {
  $result: $path + $image;
  @return url($result);
}

@mixin hide-accessible {
    visibility: hidden;
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -0.0625rem;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px
}
